name: CI

on:
  push:
    branches: [ main ]
    paths:
      - "**.py"
      - ".github/workflows/**"
      - "requirements*.txt"
      - "pyproject.toml"
  pull_request:
    branches: [ main ]
    paths:
      - "**.py"
      - ".github/workflows/**"
      - "requirements*.txt"
      - "pyproject.toml"

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # -------------------------
  # 1️⃣ ЛИНТЕРЫ И ФОРМАТИРОВАНИЕ
  # -------------------------
  lint:
    name: Lint (ruff/isort/black)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt 2>/dev/null || true
          pip install ruff isort black

      - name: Ruff auto-format
        run: ruff format .

      - name: Ruff lint (no fixes)
        run: ruff check .

      - name: isort (imports order)
        run: isort --check-only --diff .

      - name: Black (code style)
        run: black --check .

  # -------------------------
  # 2️⃣ ТЕСТЫ И ПОКРЫТИЕ
  # -------------------------
  tests:
    name: Tests (pytest + coverage)
    needs: lint
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt 2>/dev/null || true
          pip install pytest pytest-cov

      - name: Run tests with coverage (fail if < 80%)
        run: |
          pytest -q --maxfail=1 --disable-warnings \
            --cov=. --cov-report=term-missing --cov-fail-under=80 \
            --cov-report=xml:coverage.xml

      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
          if-no-files-found: error

  # -------------------------
  # 3️⃣ КОММЕНТАРИЙ С ПОКРЫТИЕМ В PR
  # -------------------------
  coverage_comment:
    name: Comment coverage in PR (3.11)
    needs: tests
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: coverage-3.11
          path: .

      - name: Extract coverage percent
        id: pct
        run: |
          python - <<'PY'
          import xml.etree.ElementTree as ET, os
          pct = round(float(ET.parse('coverage.xml').getroot().get('line-rate'))*100, 2)
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
              f.write(f"value={pct}\n")
          PY

      - name: Post sticky comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: coverage
          message: |
            🧪 **Coverage (Python 3.11)**: **${{ steps.pct.outputs.value }}%**
            _Artifact:_ `coverage.xml`
        
