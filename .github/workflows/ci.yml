name: CI

on:
  push:
    branches: [ main ]
    paths:
      - "**.py"
      - ".github/workflows/**"
      - "requirements*.txt"
      - "pyproject.toml"
  pull_request:
    paths:
      - "**.py"
      - ".github/workflows/**"
      - "requirements*.txt"
      - "pyproject.toml"

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint (ruff/isort/black)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install ruff isort black

      # Не валим сборку из-за форматирования — просто чиним
      - name: Ruff auto-format
        run: ruff format .

      - name: Ruff lint (no fixes)
        run: ruff check .

      - name: isort (imports order)
        run: isort --check-only --diff .

      - name: Black (code style)
        run: black --check .

  tests:
    name: Tests (pytest + coverage)
    needs: lint
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install pytest pytest-cov

      - name: Run tests with coverage
        run: |
          pytest -q --maxfail=1 --disable-warnings \
            --cov=. --cov-report=term-missing --cov-report=xml:coverage.xml

      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
          if-no-files-found: error
